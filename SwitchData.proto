//protoc --proto_path=./ --csharp_out=..\Common\Seefar.Interfaces\ --csharp_opt=base_namespace=Seefar.Interfaces.SwitchData .\SwitchData.proto
//protoc --proto_path=./ --python_out=./py/ .\SwitchData.proto
syntax = "proto3";

package Seefar.Interfaces.SwitchData;

import "Common.proto";
import "DataStructure.proto";
import "GisData.proto";

/*
This enum describes the possible statesof a switch Indicator . the default value is Unknown
*/
enum SwitchIndStatesEnum{
    Unknown         = 0;
    Left            = 1;
    Right           = 2;
}
/*
a structure representing a Switch indicator. 
*/
message SwitchIndicator{
    int32                           switchIndID     = 1; //a unique ID generated by the Switch Gateway
    string                          switchIndName   = 2; // a string attached to the switch for diplay purposes
    Seefar.Interfaces.Gis.GeoPoint  location        = 3; //geo location of the switch
    SwitchIndStatesEnum             indicatorState  = 4; //the current known state of the switch . when Seefar send this to the AI algo , the value is Unknown by default
    double                          certainty       = 5; // a nmber between 0-1 indicating the algo certainty with the switch indicator state
    string                          Source          = 6; // a string representing the source of the data in the struct : "seefar" / "ai" 
}
/*
a structure representing the position of a certain switch indicator of the frame . 
*/
message SwitchIndOnFrame{
    SwitchIndicator                         switchInd       = 1; // switch indicator data
    Seefar.Interfaces.Common.BoundingBox    frameLoation    = 2; //bounding box of the switch
    // the pixel on the frame representing the placement of the switch location on the frame
    // In cases where the switch indicator will be close to the edge of the image , this might contribute to the detection
    // of the switch in the frame
    Seefar.Interfaces.Common.Offset         switchOffset    = 3; 
}
/*
a message sent from seefar system to the AI algorithm requesting for switch indicator state on a frame
*/
message SwitchStateRequest{
    Seefar.Interfaces.Common.MessageHeader  msgHeader       = 1;
    repeated SwitchIndOnFrame               switches        = 2;  // a list of all switch indicators on the frame
    Seefar.Interfaces.AI.AiFrameData        frameMetadata   = 3;  //frame metadata
    bytes                                   framePixelArray = 4;  // array of frame bytes
}
/*
a message sent from AI algorithm to the seefar system with the detedted state of the  switch indicator 
*/
message SwitchStateResponse {
    Seefar.Interfaces.Common.MessageHeader  msgHeader       = 1;
    SwitchIndicator                         switchInd       = 2;
    repeated  Seefar.Interfaces.AI.TimeLabel stages         = 3;
}
/*
message used by the switch Gateway to report a switch indicator stte to the seefar system
*/
message SwitchReport{
    Seefar.Interfaces.Common.MessageHeader  msgHeader       = 1;
    SwitchIndicator                         switchInd       = 2;
    
}